Pairwise swap of linked list

class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class Llist:
    def __init__(self):
        self.head=self.tail=None
    def create(self,data):
        n=Node(data)
        if self.head==None:
            self.head=self.tail=n
        else:
            self.tail.next=n
            self.tail=n
    def change(self):
        temp=self.head
        while temp and temp.next:
            t1=temp
            t2=temp.next
            t1.data,t2.data=t2.data,t1.data
            temp=temp.next.next
    def show(self):
        temp=self.head
        while temp!=None:
            print(temp.data,)
            temp=temp.next
s1=Llist()
while True:
    x=int(input())
    if x==-1:
        break
    s1.create(x)
s1.change()
s1.show()